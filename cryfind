#!/usr/bin/env python3
from docopt import docopt

from crylib import find_const, find_api, pe_import, stackstrings
from crylib.constants.CryptoConstants import constants
from crylib.constants.CryptoAPI import apinames

__doc__ = f"""Usage: cryfind [-m METHODS] [-y] <filename>

-h --help           Show this screen
-m METHODS          Methods to be used, could be : constant,stackstrings,api,peimport or all [default: constant,api]
-y --summary        Only show summary
"""

def banner():
    print('''
   ▄▄· ▄▄▄   ▄· ▄▌·▄▄▄▪   ▐ ▄ ·▄▄▄▄
  ▐█ ▌▪▀▄ █·▐█▪██▌▐▄▄·██ •█▌▐███▪ ██
  ██ ▄▄▐▀▀▄ ▐█▌▐█▪██▪ ▐█·▐█▐▐▌▐█· ▐█▌
  ▐███▌▐█•█▌ ▐█▀·.██▌.▐█▌██▐█▌██. ██
  ·▀▀▀ .▀  ▀  ▀ • ▀▀▀ ▀▀▀▀▀ █▪▀▀▀▀▀•
''')

def main():
    arguments = docopt(__doc__)
    filename = arguments['<filename>']
    methods = arguments['-m'].split(',')
    summary = arguments['--summary']
    if arguments['-m'] == 'all':
        methods = 'constant,stackstrings,api,peimport'.split(',')

    banner()

    try:
        with open(filename, 'rb') as f:
            binary = f.read()
    except FileNotFoundError:
        print(f"\n[-] '{filename}' file not found")
        exit()

    for method in methods:
        if method == 'constant':
            print('\n[+] Searching For Crypto Constants...')
            results = find_const(binary, constants, summary)
            for result in results:
                print(result.str(summary))
            if not results:
                print('[-] Nothing Found')
        elif method == 'stackstrings':
            print('\n[+] Searching For Crypto Constants in StackStrings... ( This might takes a while )')
            data = stackstrings(binary)
            results = find_const(data, constants, summary)
            for result in results:
                print(result.str(summary))
            if not results:
                print('[-] Nothing Found')
        elif method == 'api':
            print('\n[+] Searching For Crypto API Names...')
            results = find_api(binary, apinames)
            for result in results:
                print(f'[+] DLL - {result["name"]}')
                if not summary:
                    for function in result['functions']:
                        print(f'    | {function["name"].decode()}: 0x{function["address"]:x}')
            if not results:
                print('[-] Nothing Found')
        elif method == 'peimport':
            print('\n[+] Searching For Crypto API in PE Import Tables...')
            try:
                results = pe_import(binary)
                for result in results:
                    print(f'[+] {result["dll"]}: {result["function"]}')
                if not results:
                    print('[-] Nothing Found')
            except Exception as e:
                print(e)
        else:
            print(f'[?] Unknown Method {method}')

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n[-] You Pressed Ctrl-C")
