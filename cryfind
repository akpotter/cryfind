#!/usr/bin/env python3
from docopt import docopt

from crylib import *
from crylib.constants.CryptoConstants import constants as CryptoConstants
from crylib.constants.CryptoAPI import constants as CryptoAPIConstants

__doc__ = f"""Usage: cryfind [-s SOURCES] [-m METHODS] [-c CONSTANTS] [-aexy] <filename>

-h --help           Show this screen
-s SOURCES          Sources to be searched, could be : plain,stackstrings or all [default: plain]
-m METHODS          Methods to be used, could be : string,yara,peimport or all [default: string]
-c CONSTANTS        Constants to be used, only for -m string, could be : crypto,apiname or all [default: crypto]
-a --all            Use all sources and methods and constants
-y --summary        Only show summary
"""

def banner():
    print('''
   ▄▄· ▄▄▄   ▄· ▄▌·▄▄▄▪   ▐ ▄ ·▄▄▄▄
  ▐█ ▌▪▀▄ █·▐█▪██▌▐▄▄·██ •█▌▐███▪ ██
  ██ ▄▄▐▀▀▄ ▐█▌▐█▪██▪ ▐█·▐█▐▐▌▐█· ▐█▌
  ▐███▌▐█•█▌ ▐█▀·.██▌.▐█▌██▐█▌██. ██
  ·▀▀▀ .▀  ▀  ▀ • ▀▀▀ ▀▀▀▀▀ █▪▀▀▀▀▀•
''')

def main():
    arguments = docopt(__doc__)
    filename = arguments['<filename>']
    summary = arguments['--summary']

    banner()
    
    try:
        with open(filename, 'rb') as f:
            binary = f.read()
    except FileNotFoundError:
        print(f"\n[-] '{filename}' file not found")
        exit()
    
    constants = CryptoConstants
    results = find_const(binary, constants)
    # TODO: if fullword founded, ignore dword, qword
    for result in results:
        if summary:
            print(f'[+] {result["name"]}')
        else:
            print(f'[+] {result["name"]} founded in {result["size"]} size')
            wide = any([value['encoding'] == 'little' for value in result['values']])
            for value in result['values']:
                space = ' ' * [0, 3][wide and value['encoding'] == 'big']
                xor = f' (⊕ 0x{value["xor"]})' if value.get('xor') else ''
                # TODO: better format alignment
                print(f'    | [{value["index"]}] {value["value"].hex()} ({value["encoding"]}){xor}{space} : {", ".join([hex(x) for x in value["addresses"]])}')
            print()

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n[-] You Pressed Ctrl-C")
