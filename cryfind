#!/usr/bin/env python3
from docopt import docopt

from crylib import find_const, find_api, pe_import, stackstrings
from crylib.constants.CryptoConstants import constants as cryptoConstants
from crylib.constants.CryptoAPI import apis as cryptoAPIs

__doc__ = """Usage: cryfind [-m METHODS] [-s STRING] [-c CONSTANT] [-x LENGTH] [-y] <filename>

-h --help           Show this screen
-m METHODS          Methods to be used, could be : constant,api,peimport,stackstrings or all [default: constant,api]
-s STRING           Specify custom string to search in ascii, conflict with -c option
-c CONSTANT         Specify custom constant to search in hex, conflict with -s option
-x LENGTH           Maximum xor key length to try [default: 1]
-y --summary        Only show summary
"""


def banner():
    print('''
   ▄▄· ▄▄▄   ▄· ▄▌·▄▄▄▪   ▐ ▄ ·▄▄▄▄
  ▐█ ▌▪▀▄ █·▐█▪██▌▐▄▄·██ •█▌▐███▪ ██
  ██ ▄▄▐▀▀▄ ▐█▌▐█▪██▪ ▐█·▐█▐▐▌▐█· ▐█▌
  ▐███▌▐█•█▌ ▐█▀·.██▌.▐█▌██▐█▌██. ██
  ·▀▀▀ .▀  ▀  ▀ • ▀▀▀ ▀▀▀▀▀ █▪▀▀▀▀▀•
''')


def main():
    arguments = docopt(__doc__)
    filename = arguments['<filename>']
    methods = arguments['-m'].split(',')
    xor_size = int(arguments['-x'])
    summary = arguments['--summary']
    if arguments['-m'] == 'all':
        methods = 'constant,stackstrings,api,peimport'.split(',')

    constants, apis = cryptoConstants, cryptoAPIs
    if arguments['-s']:
        constants = [{
            'name': 'Custom',
            'value': arguments['-s'].encode()
        }]
    elif arguments['-c']:
        if arguments['-c'].startswith('0x'):
            arguments['-c'] = arguments['-c'][2:]
        constants = [{
            'name': 'Custom',
            'value': bytes.fromhex(arguments['-c'])
        }]

    banner()

    try:
        with open(filename, 'rb') as f:
            binary = f.read()
    except FileNotFoundError:
        print(f"\n[-] '{filename}' file not found")
        exit()

    for method in methods:
        if method == 'constant':
            print('\n[+] Searching For Crypto Constants...')
            results = find_const(binary, constants, summary, xor_size)
            for result in results:
                print(result)
            if not results:
                print('[-] Nothing Found')
        elif method == 'stackstrings':
            print('\n[+] Searching For Crypto Constants in StackStrings... ( This might takes a while )')
            try:
                data = stackstrings(binary)
                results = find_const(data, constants, summary)
                for result in results:
                    print(result)
                if not results:
                    print('[-] Nothing Found')
            except ImportError as e:
                print(f'[-] {e}')
        elif method == 'api':
            print('\n[+] Searching For Crypto API Names...')
            results = find_api(binary, apis)
            for result in results:
                print(f'[+] DLL - {result["name"]}')
                if not summary:
                    for function in result['functions']:
                        print(f'    | {function["name"]}: {", ".join([hex(address) for address in function["addresses"]])}')
            if not results:
                print('[-] Nothing Found')
        elif method == 'peimport':
            print('\n[+] Searching For Crypto API in PE Import Tables...')
            try:
                results = pe_import(binary)
                for result in results:
                    print(f'[+] {result["dll"]}: {result["function"]}')
                if not results:
                    print('[-] Nothing Found')
            except (ImportError, ValueError) as e:
                print(f'[-] {e}')
        else:
            print(f'[?] Unknown Method {method}')


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n[-] You Pressed Ctrl-C")
